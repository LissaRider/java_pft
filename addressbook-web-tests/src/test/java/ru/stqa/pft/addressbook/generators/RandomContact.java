package ru.stqa.pft.addressbook.generators;

import com.ibm.icu.text.Transliterator;
import ru.stqa.pft.addressbook.models.ContactData;

import java.io.File;
import java.io.IOException;
import java.util.*;
import java.util.concurrent.ThreadLocalRandom;
import java.util.stream.Collectors;

public class RandomContact {

  private final Random random = new Random();

  private final String CYRILLIC_TO_LATIN = "Russian-Latin/BGN";
  private final Transliterator toLatinTrans = Transliterator.getInstance(CYRILLIC_TO_LATIN);

  //<editor-fold desc="Lists">
  private final List<String> genders = Arrays.asList("male", "female");
  private final List<String> maleFirstNamesEN = Arrays.asList("Aaron", "Adam", "Adrian", "Aiden", "Alex", "Alexander", "Andrew", "Angel", "Anthony", "Austin", "Ayden", "Benjamin", "Bentley", "Blake", "Brandon", "Brayden", "Brody", "Bryson", "Caleb", "Cameron", "Carlos", "Carson", "Carter", "Charles", "Chase", "Christian", "Christopher", "Colton", "Connor", "Cooper", "Damian", "Daniel", "David", "Dominic", "Dylan", "Easton", "Eli", "Elijah", "Ethan", "Evan", "Gabriel", "Gavin", "Grayson", "Henry", "Hudson", "Hunter", "Ian", "Isaac", "Isaiah", "Jace", "Jack", "Jackson", "Jacob", "James", "Jason", "Jaxon", "Jayden", "Jeremiah", "John", "Jonathan", "Jordan", "Jose", "Joseph", "Joshua", "Josiah", "Juan", "Julian", "Justin", "Kayden", "Kevin", "Landon", "Levi", "Liam", "Logan", "Lucas", "Luis", "Luke", "Mason", "Matthew", "Michael", "Nathan", "Nathaniel", "Nicholas", "Noah", "Nolan", "Oliver", "Owen", "Parker", "Robert", "Ryan", "Ryder", "Samuel", "Sebastian", "Thomas", "Tristan", "Tyler", "William", "Wyatt", "Xavier", "Zachary");
  private final List<String> femaleFirstNamesEN = Arrays.asList("Aaliyah", "Abigail", "Addison", "Alexa", "Alexandra", "Alexis", "Allison", "Alyssa", "Amelia", "Andrea", "Anna", "Annabelle", "Aria", "Ariana", "Arianna", "Ashley", "Aubree", "Aubrey", "Audrey", "Autumn", "Ava", "Avery", "Bailey", "Bella", "Brianna", "Brooklyn", "Camila", "Caroline", "Charlotte", "Chloe", "Claire", "Elizabeth", "Ella", "Ellie", "Emily", "Emma", "Eva", "Evelyn", "Faith", "Gabriella", "Genesis", "Gianna", "Grace", "Hailey", "Hannah", "Harper", "Isabella", "Jasmine", "Jocelyn", "Julia", "Katherine", "Kayla", "Kaylee", "Kennedy", "Khloe", "Kimberly", "Kylie", "Lauren", "Layla", "Leah", "Lillian", "Lily", "London", "Lucy", "Lydia", "Mackenzie", "Madeline", "Madelyn", "Madison", "Makayla", "Maya", "Melanie", "Mia", "Molly", "Morgan", "Naomi", "Natalie", "Nevaeh", "Olivia", "Peyton", "Piper", "Reagan", "Riley", "Samantha", "Sarah", "Savannah", "Scarlett", "Serenity", "Skylar", "Sofia", "Sophia", "Sophie", "Stella", "Sydney", "Taylor", "Trinity", "Victoria", "Violet", "Zoe", "Zoey");
  private final List<String> lastNamesEN = Arrays.asList("Abbott", "Abernathy", "Abshire", "Adams", "Altenwerth", "Anderson", "Ankunding", "Armstrong", "Auer", "Aufderhar", "Bahringer", "Bailey", "Balistreri", "Barrows", "Bartell", "Bartoletti", "Barton", "Bashirian", "Batz", "Bauch", "Baumbach", "Bayer", "Beahan", "Beatty", "Bechtelar", "Becker", "Bednar", "Beer", "Beier", "Berge", "Bergnaum", "Bergstrom", "Bernhard", "Bernier", "Bins", "Blanda", "Blick", "Block", "Bode", "Boehm", "Bogan", "Bogisich", "Borer", "Bosco", "Botsford", "Boyer", "Boyle", "Bradtke", "Brakus", "Braun", "Breitenberg", "Brekke", "Brown", "Bruen", "Buckridge", "Carroll", "Carter", "Cartwright", "Casper", "Cassin", "Champlin", "Christiansen", "Cole", "Collier", "Collins", "Conn", "Connelly", "Conroy", "Considine", "Corkery", "Cormier", "Corwin", "Cremin", "Crist", "Crona", "Cronin", "Crooks", "Cruickshank", "Cummerata", "Cummings", "Dach", "Daniel", "Dare", "Daugherty", "Davis", "Deckow", "Denesik", "Dibbert", "Dickens", "Dicki", "Dickinson", "Dietrich", "Donnelly", "Dooley", "Douglas", "Doyle", "DuBuque", "Durgan", "Ebert", "Effertz", "Emard", "Emmerich", "Erdman", "Ernser", "Fadel", "Fahey", "Farrell", "Fay", "Feeney", "Feest", "Feil", "Ferry", "Fisher", "Flatley", "Frami", "Franecki", "Friesen", "Fritsch", "Funk", "Gaylord", "Gerhold", "Gerlach", "Gibson", "Gislason", "Gleason", "Gleichner", "Glover", "Goldner", "Goodwin", "Gorczany", "Gottlieb", "Goyette", "Grady", "Graham", "Grant", "Green", "Greenfelder", "Greenholt", "Grimes", "Gulgowski", "Gusikowski", "Gutkowski", "Gutmann", "Haag", "Hackett", "Hagenes", "Hahn", "Haley", "Halvorson", "Hamill", "Hammes", "Hand", "Hane", "Hansen", "Harber", "Harris", "Hartmann", "Harvey", "Hauck", "Hayes", "Heaney", "Heathcote", "Hegmann", "Heidenreich", "Heller", "Herman", "Hermann", "Hermiston", "Herzog", "Hessel", "Hettinger", "Hickle", "Hilll", "Hills", "Hilpert", "Hintz", "Hirthe", "Hodkiewicz", "Hoeger", "Homenick", "Hoppe", "Howe", "Howell", "Hudson", "Huel", "Huels", "Hyatt", "Jacobi", "Jacobs", "Jacobson", "Jakubowski", "Jaskolski", "Jast", "Jenkins", "Jerde", "Johns", "Johnson", "Johnston", "Jones", "Kassulke", "Kautzer", "Keebler", "Keeling", "Kemmer", "Kerluke", "Kertzmann", "Kessler", "Kiehn", "Kihn", "Kilback", "King", "Kirlin", "Klein", "Kling", "Klocko", "Koch", "Koelpin", "Koepp", "Kohler", "Konopelski", "Koss", "Kovacek", "Kozey", "Krajcik", "Kreiger", "Kris", "Kshlerin", "Kub", "Kuhic", "Kuhlman", "Kuhn", "Kulas", "Kunde", "Kunze", "Kuphal", "Kutch", "Kuvalis", "Labadie", "Lakin", "Lang", "Langosh", "Langworth", "Larkin", "Larson", "Leannon", "Lebsack", "Ledner", "Leffler", "Legros", "Lehner", "Lemke", "Lesch", "Leuschke", "Lind", "Lindgren", "Littel", "Little", "Lockman", "Lowe", "Lubowitz", "Lueilwitz", "Luettgen", "Lynch", "Macejkovic", "MacGyver", "Maggio", "Mann", "Mante", "Marks", "Marquardt", "Marvin", "Mayer", "Mayert", "McClure", "McCullough", "McDermott", "McGlynn", "McKenzie", "McLaughlin", "Medhurst", "Mertz", "Metz", "Miller", "Mills", "Mitchell", "Moen", "Mohr", "Monahan", "Moore", "Morar", "Morissette", "Mosciski", "Mraz", "Mueller", "Muller", "Murazik", "Murphy", "Murray", "Nader", "Nicolas", "Nienow", "Nikolaus", "Nitzsche", "Nolan", "Oberbrunner", "Okuneva", "Olson", "Ondricka", "Orn", "Ortiz", "Osinski", "Pacocha", "Padberg", "Pagac", "Parisian", "Parker", "Paucek", "Pfannerstill", "Pfeffer", "Pollich", "Pouros", "Powlowski", "Predovic", "Price", "Prohaska", "Prosacco", "Purdy", "Quigley", "Quitzon", "Rath", "Ratke", "Rau", "Raynor", "Reichel", "Reichert", "Reilly", "Reinger", "Rempel", "Renner", "Reynolds", "Rice", "Rippin", "Ritchie", "Robel", "Roberts", "Rodriguez", "Rogahn", "Rohan", "Rolfson", "Romaguera", "Roob", "Rosenbaum", "Rowe", "Ruecker", "Runolfsdottir", "Runolfsson", "Runte", "Russel", "Rutherford", "Ryan", "Sanford", "Satterfield", "Sauer", "Sawayn", "Schaden", "Schaefer", "Schamberger", "Schiller", "Schimmel", "Schinner", "Schmeler", "Schmidt", "Schmitt", "Schneider", "Schoen", "Schowalter", "Schroeder", "Schulist", "Schultz", "Schumm", "Schuppe", "Schuster", "Senger", "Shanahan", "Shields", "Simonis", "Sipes", "Skiles", "Smith", "Smitham", "Spencer", "Spinka", "Sporer", "Stamm", "Stanton", "Stark", "Stehr", "Steuber", "Stiedemann", "Stokes", "Stoltenberg", "Stracke", "Streich", "Stroman", "Strosin", "Swaniawski", "Swift", "Terry", "Thiel", "Thompson", "Tillman", "Torp", "Torphy", "Towne", "Toy", "Trantow", "Tremblay", "Treutel", "Tromp", "Turcotte", "Turner", "Ullrich", "Upton", "Vandervort", "Veum", "Volkman", "Von", "VonRueden", "Waelchi", "Walker", "Walsh", "Walter", "Ward", "Waters", "Watsica", "Weber", "Wehner", "Weimann", "Weissnat", "Welch", "West", "White", "Wiegand", "Wilderman", "Wilkinson", "Will", "Williamson", "Willms", "Windler", "Wintheiser", "Wisoky", "Wisozk", "Witting", "Wiza", "Wolf", "Wolff", "Wuckert", "Wunsch", "Wyman", "Yost", "Yundt", "Zboncak", "Zemlak", "Ziemann", "Zieme", "Zulauf");
  private final List<String> maleFirstNamesRU = Arrays.asList("Александр", "Алексей", "Альберт", "Анатолий", "Андрей", "Антон", "Аркадий", "Арсений", "Артём", "Борис", "Вадим", "Валентин", "Валерий", "Василий", "Виктор", "Виталий", "Владимир", "Владислав", "Вячеслав", "Геннадий", "Георгий", "Герман", "Григорий", "Даниил", "Денис", "Дмитрий", "Евгений", "Егор", "Иван", "Игнатий", "Игорь", "Илья", "Константин", "Лаврентий", "Леонид", "Лука", "Макар", "Максим", "Матвей", "Михаил", "Никита", "Николай", "Олег", "Роман", "Семён", "Сергей", "Станислав", "Степан", "Фёдор", "Эдуард", "Юрий", "Ярослав");
  private final List<String> femaleFirstNamesRU = Arrays.asList("Анна", "Алёна", "Алевтина", "Александра", "Алина", "Алла", "Анастасия", "Ангелина", "Анжела", "Анжелика", "Антонида", "Антонина", "Анфиса", "Арина", "Валентина", "Валерия", "Варвара", "Василиса", "Вера", "Вероника", "Виктория", "Галина", "Дарья", "Евгения", "Екатерина", "Елена", "Елизавета", "Жанна", "Зинаида", "Зоя", "Ирина", "Кира", "Клавдия", "Ксения", "Лариса", "Лидия", "Любовь", "Людмила", "Маргарита", "Марина", "Мария", "Надежда", "Наталья", "Нина", "Оксана", "Ольга", "Раиса", "Регина", "Римма", "Светлана", "София", "Таисия", "Тамара", "Татьяна", "Ульяна", "Юлия");
  private final List<String> maleMiddleNamesRU = Arrays.asList("Александрович", "Алексеевич", "Альбертович", "Анатольевич", "Андреевич", "Антонович", "Аркадьевич", "Арсеньевич", "Артёмович", "Борисович", "Вадимович", "Валентинович", "Валерьевич", "Васильевич", "Викторович", "Витальевич", "Владимирович", "Владиславович", "Вячеславович", "Геннадьевич", "Георгиевич", "Германович", "Григорьевич", "Даниилович", "Денисович", "Дмитриевич", "Евгеньевич", "Егорович", "Иванович", "Игнатьевич", "Игоревич", "Ильич", "Константинович", "Лаврентьевич", "Леонидович", "Лукич", "Макарович", "Максимович", "Матвеевич", "Михайлович", "Никитич", "Николаевич", "Олегович", "Романович", "Семёнович", "Сергеевич", "Станиславович", "Степанович", "Фёдорович", "Эдуардович", "Юрьевич", "Ярославович");
  private final List<String> femaleMiddleNamesRU = Arrays.asList("Александровна", "Алексеевна", "Альбертовна", "Анатольевна", "Андреевна", "Антоновна", "Аркадьевна", "Арсеньевна", "Артёмовна", "Борисовна", "Вадимовна", "Валентиновна", "Валерьевна", "Васильевна", "Викторовна", "Витальевна", "Владимировна", "Владиславовна", "Вячеславовна", "Геннадьевна", "Георгиевна", "Германовна", "Григорьевна", "Данииловна", "Денисовна", "Дмитриевна", "Евгеньевна", "Егоровна", "Ивановна", "Игнатьевна", "Игоревна", "Ильинична", "Константиновна", "Лаврентьевна", "Леонидовна", "Макаровна", "Максимовна", "Матвеевна", "Михайловна", "Никитична", "Николаевна", "Олеговна", "Романовна", "Семёновна", "Сергеевна", "Станиславовна", "Степановна", "Фёдоровна", "Эдуардовна", "Юрьевна", "Ярославовна");
  private final List<String> maleLastNamesRU = Arrays.asList("Смирнов", "Иванов", "Кузнецов", "Попов", "Соколов", "Лебедев", "Козлов", "Новиков", "Морозов", "Петров", "Волков", "Соловьев", "Васильев", "Зайцев", "Павлов", "Семенов", "Голубев", "Виноградов", "Богданов", "Воробьев", "Федоров", "Михайлов", "Беляев", "Тарасов", "Белов", "Комаров", "Орлов", "Киселев", "Макаров", "Андреев", "Ковалев", "Ильин", "Гусев", "Титов", "Кузьмин", "Кудрявцев", "Баранов", "Куликов", "Алексеев", "Степанов", "Яковлев", "Сорокин", "Сергеев", "Романов", "Захаров", "Борисов", "Королев", "Герасимов", "Пономарев", "Григорьев", "Лазарев", "Медведев", "Ершов", "Никитин", "Соболев", "Рябов", "Поляков", "Цветков", "Данилов", "Жуков", "Фролов", "Журавлев", "Николаев", "Крылов", "Максимов", "Сидоров", "Осипов", "Белоусов", "Федотов", "Дорофеев", "Егоров", "Матвеев", "Бобров", "Дмитриев", "Калинин", "Анисимов", "Петухов", "Антонов", "Тимофеев", "Никифоров", "Веселов", "Филиппов", "Марков", "Большаков", "Суханов", "Миронов", "Ширяев", "Александров", "Коновалов", "Шестаков", "Казаков", "Ефимов", "Денисов", "Громов", "Фомин", "Давыдов", "Мельников", "Щербаков", "Блинов", "Колесников", "Карпов", "Афанасьев", "Власов", "Маслов", "Исаков", "Тихонов", "Аксенов", "Гаврилов", "Родионов", "Котов", "Горбунов", "Кудряшов", "Быков", "Зуев", "Третьяков", "Савельев", "Панов", "Рыбаков", "Суворов", "Абрамов", "Воронов", "Мухин", "Архипов", "Трофимов", "Мартынов", "Емельянов", "Горшков", "Чернов", "Овчинников", "Селезнев", "Панфилов", "Копылов", "Михеев", "Галкин", "Назаров", "Лобанов", "Лукин", "Беляков", "Потапов", "Некрасов", "Хохлов", "Жданов", "Наумов", "Шилов", "Воронцов", "Ермаков", "Дроздов", "Игнатьев", "Савин", "Логинов", "Сафонов", "Капустин", "Кириллов", "Моисеев", "Елисеев", "Кошелев", "Костин", "Горбачев", "Орехов", "Ефремов", "Исаев", "Евдокимов", "Калашников", "Кабанов", "Носков", "Юдин", "Кулагин", "Лапин", "Прохоров", "Нестеров", "Харитонов", "Агафонов", "Муравьев", "Ларионов", "Федосеев", "Зимин", "Пахомов", "Шубин", "Игнатов", "Филатов", "Крюков", "Рогов", "Кулаков", "Терентьев", "Молчанов", "Владимиров", "Артемьев", "Гурьев", "Зиновьев", "Гришин", "Кононов", "Дементьев", "Ситников", "Симонов", "Мишин", "Фадеев", "Комиссаров", "Мамонтов", "Носов", "Гуляев", "Шаров", "Устинов", "Вишняков", "Евсеев", "Лаврентьев", "Брагин", "Константинов", "Корнилов", "Авдеев", "Зыков", "Бирюков", "Шарапов", "Никонов", "Щукин", "Дьячков", "Одинцов", "Сазонов", "Якушев", "Красильников", "Гордеев", "Самойлов", "Князев", "Беспалов", "Уваров", "Шашков", "Бобылев", "Доронин", "Белозеров", "Рожков", "Самсонов", "Мясников", "Лихачев", "Буров", "Сысоев", "Фомичев", "Русаков", "Стрелков", "Гущин", "Тетерин", "Колобов", "Субботин", "Фокин", "Блохин", "Селиверстов", "Пестов", "Кондратьев", "Силин", "Меркушев", "Лыткин", "Туров");
  private final List<String> femaleLastNamesRU = Arrays.asList("Смирнова", "Иванова", "Кузнецова", "Попова", "Соколова", "Лебедева", "Козлова", "Новикова", "Морозова", "Петрова", "Волкова", "Соловьева", "Васильева", "Зайцева", "Павлова", "Семенова", "Голубева", "Виноградова", "Богданова", "Воробьева", "Федорова", "Михайлова", "Беляева", "Тарасова", "Белова", "Комарова", "Орлова", "Киселева", "Макарова", "Андреева", "Ковалева", "Ильина", "Гусева", "Титова", "Кузьмина", "Кудрявцева", "Баранова", "Куликова", "Алексеева", "Степанова", "Яковлева", "Сорокина", "Сергеева", "Романова", "Захарова", "Борисова", "Королева", "Герасимова", "Пономарева", "Григорьева", "Лазарева", "Медведева", "Ершова", "Никитина", "Соболева", "Рябова", "Полякова", "Цветкова", "Данилова", "Жукова", "Фролова", "Журавлева", "Николаева", "Крылова", "Максимова", "Сидорова", "Осипова", "Белоусова", "Федотова", "Дорофеева", "Егорова", "Матвеева", "Боброва", "Дмитриева", "Калинина", "Анисимова", "Петухова", "Антонова", "Тимофеева", "Никифорова", "Веселова", "Филиппова", "Маркова", "Большакова", "Суханова", "Миронова", "Ширяева", "Александрова", "Коновалова", "Шестакова", "Казакова", "Ефимова", "Денисова", "Громова", "Фомина", "Давыдова", "Мельникова", "Щербакова", "Блинова", "Колесникова", "Карпова", "Афанасьева", "Власова", "Маслова", "Исакова", "Тихонова", "Аксенова", "Гаврилова", "Родионова", "Котова", "Горбунова", "Кудряшова", "Быкова", "Зуева", "Третьякова", "Савельева", "Панова", "Рыбакова", "Суворова", "Абрамова", "Воронова", "Мухина", "Архипова", "Трофимова", "Мартынова", "Емельянова", "Горшкова", "Чернова", "Овчинникова", "Селезнева", "Панфилова", "Копылова", "Михеева", "Галкина", "Назарова", "Лобанова", "Лукина", "Белякова", "Потапова", "Некрасова", "Хохлова", "Жданова", "Наумова", "Шилова", "Воронцова", "Ермакова", "Дроздова", "Игнатьева", "Савина", "Логинова", "Сафонова", "Капустина", "Кириллова", "Моисеева", "Елисеева", "Кошелева", "Костина", "Горбачева", "Орехова", "Ефремова", "Исаева", "Евдокимова", "Калашникова", "Кабанова", "Носкова", "Юдина", "Кулагина", "Лапина", "Прохорова", "Нестерова", "Харитонова", "Агафонова", "Муравьева", "Ларионова", "Федосеева", "Зимина", "Пахомова", "Шубина", "Игнатова", "Филатова", "Крюкова", "Рогова", "Кулакова", "Терентьева", "Молчанова", "Владимирова", "Артемьева", "Гурьева", "Зиновьева", "Гришина", "Кононова", "Дементьева", "Ситникова", "Симонова", "Мишина", "Фадеева", "Комиссарова", "Мамонтова", "Носова", "Гуляева", "Шарова", "Устинова", "Вишнякова", "Евсеева", "Лаврентьева", "Брагина", "Константинова", "Корнилова", "Авдеева", "Зыкова", "Бирюкова", "Шарапова", "Никонова", "Щукина", "Дьячкова", "Одинцова", "Сазонова", "Якушева", "Красильникова", "Гордеева", "Самойлова", "Князева", "Беспалова", "Уварова", "Шашкова", "Бобылева", "Доронина", "Белозерова", "Рожкова", "Самсонова", "Мясникова", "Лихачева", "Бурова", "Сысоева", "Фомичева", "Русакова", "Стрелкова", "Гущина", "Тетерина", "Колобова", "Субботина", "Фокина", "Блохина", "Селиверстова", "Пестова", "Кондратьева", "Силина", "Меркушева", "Лыткина", "Турова");
  private final List<String> malePhotos = Arrays.asList("/male/male_icon.jpg", "/male/male_icon.png", "/male/male_icon.bmp", "/male/male_sign.jpg", "/male/male_sign.png", "/male/male_sign.bmp");
  private final List<String> femalePhotos = Arrays.asList("/female/female_icon.jpg", "/female/female_icon.png", "/female/female_icon.bmp", "/female/female_sign.jpg", "/female/female_sign.png", "/female/female_sign.bmp");
  private final List<String> jobSeniorityEN = Arrays.asList("Junior", "Middle", "Senior", "Lead");
  private final List<String> jobPositionEN = Arrays.asList("Supervisor", "Associate", "Executive", "Liaison", "Officer", "Manager", "Engineer", "Specialist", "Director", "Coordinator", "Administrator", "Architect", "Analyst", "Designer", "Planner", "Orchestrator", "Technician", "Developer", "Producer", "Consultant", "Assistant", "Facilitator", "Agent", "Representative", "Strategist");
  private final List<String> jobTitlesRU = Arrays.asList("Агент", "Агент коммерческий", "Агент по закупкам", "Агент по продаже недвижимости", "Агент по снабжению", "Агент рекламный", "Агент страховой", "Агент торговый", "Администратор", "Аналитик", "Архивариус", "Архитектор", "Ассистент инспектора фонда", "Аудитор", "Аукционист", "Биржевой маклер", "Брокер", "Брокер торговый", "Бухгалтер", "Бухгалтер-ревизор", "Ведущий инженер", "Ведущий инженер по качеству ПО", "Ведущий конструктор", "Ведущий научный сотрудник", "Ведущий разработчик", "Ведущий экономист", "Выпускающий", "Генеральный директор", "Главный бухгалтер", "Главный диспетчер", "Главный инженер", "Главный инженер организации", "Главный инженер проекта. Главный архитектор проекта", "Главный инженер учреждения", "Главный конструктор", "Главный конструктор проекта", "Главный ландшафтный архитектор проекта", "Главный металлург", "Главный метролог", "Главный механик", "Главный научный сотрудник", "Главный редактор", "Главный сварщик", "Главный специалист в архитектурно-планировочной мастерской", "Главный специалист в основном отделе", "Главный специалист по защите информации", "Главный технолог", "Главный энергетик", "Дежурный", "Дежурный бюро пропусков", "Дежурный по выдаче справок", "Дежурный по залу", "Дежурный по комнате отдыха", "Дежурный по общежитию", "Дежурный по этажу гостиницы", "Делопроизводитель", "Дизайнер", "Дилер", "Директор вычислительного центра", "Директор гостиницы", "Директор котельной", "Директор организации", "Директор по связям с инвесторами", "Директор предприятия", "Директор типографии", "Директор учреждения", "Диспетчер", "Документовед", "Заведующая машинописным бюро", "Заведующий архивом", "Заведующий аспирантурой", "Заведующий бюро оформления проектных материалов", "Заведующий бюро пропусков", "Заведующий жилым корпусом гостиницы", "Заведующий жилым корпусом пансионата", "Заведующий камерой хранения", "Заведующий канцелярией", "Заведующий конструкторским отделом", "Заведующий копировально-множительным бюро", "Заведующий лабораторией института", "Заведующий мастерской", "Заведующий научно-исследовательским отделом института", "Заведующий научно-технической библиотекой", "Заведующий общежитием", "Заведующий отделением института", "Заведующий отделом кадров", "Заведующий отделом научно-технической информации", "Заведующий отделом оформления проектных материалов", "Заведующий отделом стандартизации", "Заведующий планово-экономическим отделом", "Заведующий производством", "Заведующий складом", "Заведующий столовой", "Заведующий техническим архивом", "Заведующий фотолабораторией", "Заведующий хозяйством", "Заведующий чертежно-копировальным бюро", "Заведующий экспедицией", "Заместитель директора организации по научной работе", "Заместитель директора по капитальному строительству", "Заместитель директора по коммерческим вопросам", "Заместитель директора по связям с общественностью", "Заместитель директора по управлению персоналом", "Заместитель директора по финансам", "Заместитель директора учреждения по научной работе", "Заместитель начальника организации по научной работе", "Заместитель начальника учреждения по научной работе", "Инженер", "Инженер по автоматизации и механизации производственных процессов", "Инженер по автоматизированным системам управления производством", "Инженер по защите информации", "Инженер по инвентаризации строений и сооружений", "Инженер по инструменту", "Инженер по качеству", "Инженер по комплектации оборудования", "Инженер по метрологии", "Инженер по надзору за строительством", "Инженер по наладке и испытаниям", "Инженер по научно-технической информации", "Инженер по нормированию труда", "Инженер по организации труда", "Инженер по организации управления производством", "Инженер по охране окружающей среды", "Инженер по охране труда", "Инженер по патентной и изобретательской работе", "Инженер по подготовке кадров", "Инженер по подготовке производства", "Инженер по ремонту", "Инженер по стандартизации", "Инженер-конструктор (конструктор)", "Инженер-лаборант", "Инженер-программист", "Инженер-проектировщик", "Инженер-технолог", "Инженер-электроник", "Инженер-энергетик", "Инкассатор", "Инспектор по кадрам", "Инспектор по контролю за исполнением поручений", "Инспектор фонда", "Инструктор-дактилолог", "Калькулятор", "Кассир", "Кодификатор", "Комендант", "Коммивояжер", "Консультант по налогам и сборам", "Копировщик", "Корпоративный секретарь акционерного общества", "Корректор", "Крупье", "Лаборант", "Ландшафтный архитектор", "Мастер контрольный участка", "Мастер контрольный цеха", "Мастер участка", "Математик", "Менеджер", "Менеджер по персоналу", "Менеджер по рекламе", "Менеджер по связям с инвесторами", "Менеджер по связям с общественностью", "Методист по физической культуре", "Механик", "Младший инженер по качеству ПО", "Младший научный сотрудник", "Младший разработчик", "Младший редактор", "Нарядчик", "Научный редактор", "Научный сотрудник", "Начальник автоколонны", "Начальник бригады", "Начальник бюро по организации труда и управления производством", "Начальник бюро социологии труда", "Начальник бюро технико-экономических исследований", "Начальник гаража", "Начальник группы", "Начальник инструментального отдела", "Начальник информационно-вычислительного центра", "Начальник исследовательской лаборатории", "Начальник лаборатории института", "Начальник лаборатории по организации труда и управления производством", "Начальник лаборатории социологии труда", "Начальник лаборатории технико-экономических исследований", "Начальник мастерской", "Начальник научно-исследовательского отдела института", "Начальник нормативно-исследовательской лаборатории по труду", "Начальник организации", "Начальник отдела (лаборатории, сектора) по защите информации", "Начальник отдела автоматизации и механизации производственных процессов", "Начальник отдела автоматизированной системы управления производством (АСУП)", "Начальник отдела информации", "Начальник отдела кадров", "Начальник отдела капитального строительства", "Начальник отдела комплектации оборудования", "Начальник отдела контроля качества", "Начальник отдела маркетинга", "Начальник отдела материально-технического снабжения", "Начальник отдела научно-технической информации", "Начальник отдела организации и оплаты труда", "Начальник отдела охраны окружающей среды", "Начальник отдела охраны труда", "Начальник отдела патентной и изобретательской работы", "Начальник отдела по связям с инвесторами", "Начальник отдела по связям с общественностью", "Начальник отдела подготовки кадров", "Начальник отдела сбыта", "Начальник отдела социального развития", "Начальник отдела стандартизации", "Начальник отделения института", "Начальник планово-экономического отдела", "Начальник по контролю производства", "Начальник производственного отдела", "Начальник производственной лаборатории", "Начальник ремонтного цеха", "Начальник смены", "Начальник технического отдела", "Начальник участка", "Начальник учреждения", "Начальник финансового отдела", "Начальник хозяйственного отдела", "Начальник центральной заводской лаборатории", "Начальник цеха", "Начальник цеха опытного производства", "Начальник юридического отдела", "Оператор диспетчерской движения и погрузочно-разгрузочных работ", "Оператор диспетчерской службы", "Оператор по диспетчерскому обслуживанию лифтов", "Оценщик", "Оценщик интеллектуальной собственности", "Переводчик", "Переводчик синхронный", "Переводчик-дактилолог", "Программист", "Производитель работ", "Прораб", "Профконсультант", "Психолог", "Редактор", "Руководитель бригады", "Руководитель группы", "Руководитель группы по инвентаризации строений и сооружений", "Руководитель подразделения", "Секретарь незрячего специалиста", "Секретарь руководителя", "Социолог", "Специалист по автотехнической экспертизе", "Специалист по защите информации", "Специалист по кадрам", "Специалист по маркетингу", "Специалист по оценке соответствия лифтов требованиям безопасности", "Специалист по промышленной безопасности подъемных сооружений", "Специалист по связям с инвесторами", "Специалист по связям с общественностью", "Старший инженер по качеству ПО", "Старший научный сотрудник", "Старший разработчик", "Статистик", "Табельщик", "Таксировщик", "Тестировщик", "Техник", "Техник вычислительного центра", "Техник информационно-вычислительного центра", "Техник по защите информации", "Техник по инвентаризации строений и сооружений", "Техник по инструменту", "Техник по метрологии", "Техник по наладке и испытаниям", "Техник по планированию", "Техник по стандартизации", "Техник по труду", "Техник-конструктор", "Техник-лаборант", "Техник-программист", "Техник-проектировщик", "Техник-технолог", "Технический редактор", "Технолог", "Товаровед", "Транспортный экспедитор", "Управляющий директор", "Управляющий отделением", "Управляющий сельскохозяйственным участком", "Управляющий фермой", "Ученый секретарь", "Учетчик", "Физиолог", "Финансовый директор", "Хронометражист", "Художественный редактор", "Художник", "Художник-конструктор", "Чертежник", "Чертежник-конструктор", "Шеф-инженер", "Шеф-повар", "Эколог", "Экономист", "Экономист вычислительного центра", "Экономист информационно-вычислительного центра", "Экономист по бухгалтерскому учету и анализу хозяйственной деятельности", "Экономист по договорной и претензионной работе", "Экономист по материально-техническому снабжению", "Экономист по планированию", "Экономист по сбыту", "Экономист по труду", "Экономист по финансовой работе", "Экспедитор", "Экспедитор по перевозке грузов", "Эксперт", "Эксперт дорожного хозяйства", "Эксперт по оценке соответствия лифтов требованиям безопасности", "Эксперт по промышленной безопасности подъемных сооружений", "Эксперт-автотехник", "Электроник", "Энергетик", "Юрисконсульт");
  private final List<String> companyNamesEN = Arrays.asList("Alist", "Beans", "Klein", "Felics", "Adapt", "MemorTech", "Porta", "SuperMemo", "Nonos", "Vitae", "Woods", "Quisuc", "Quicker", "Interdem", "Morsem", "Datastore", "Linger", "Buapel", "Terson", "Gualas", "Yrsa", "Warst", "Erntogra", "Robutenia", "QuickLink", "Furba", "Hostes", "FlyHigh");
  private final List<String> companySuffixesEN = Arrays.asList("Associates", "Company", "Consulting", "Inc.", "Industries", "Limited", "LLC", "Ltd");
  private final List<String> companySuffixesRU = Arrays.asList("Снаб", "Торг", "Пром", "Трейд", "Сбыт", "Клепаж", "Строй", "Банк");
  private final List<String> companyPrefixesRU = Arrays.asList("ООО", "ЗАО", "ОАО");
  private final List<String> streetTitlesRU = Arrays.asList("Советская", "Молодежная", "Центральная", "Школьная", "Новая", "Садовая", "Лесная", "Набережная", "Ленина", "Мира", "Октябрьская", "Зеленая", "Комсомольская", "Заречная", "Первомайская", "Гагарина", "Полевая", "Луговая", "Пионерская", "Кирова", "Юбилейная", "Северная", "Пролетарская", "Степная", "Пушкина", "Калинина", "Южная", "Колхозная", "Рабочая", "Солнечная", "Железнодорожная", "Восточная", "Заводская", "Чапаева", "Нагорная", "Строителей", "Береговая", "Победы", "Горького", "Кооперативная", "Красноармейская", "Совхозная", "Речная", "Школьный ", "Спортивная", "Озерная", "Строительная", "Парковая", "Чкалова", "Мичурина", "Подгорная", "Дружбы", "Почтовая", "Партизанская", "Вокзальная", "Лермонтова", "Свободы", "Дорожная", "Дачная", "Маяковского", "Западная", "Фрунзе", "Дзержинского", "Московская", "Свердлова", "Некрасова", "Гоголя", "Красная", "Трудовая", "Шоссейная", "Чехова", "Коммунистическая", "Труда", "Комарова", "Матросова", "Островского", "Сосновая", "Клубная", "Куйбышева", "Березовая", "Карла Маркса", "8 Марта", "Больничная", "Садовый ", "Интернациональная", "Суворова", "Цветочная", "Трактовая", "Ломоносова", "Горная", "Космонавтов", "Энергетиков", "Шевченко", "Весенняя", "Механизаторов", "Коммунальная", "40 лет Победы", "Майская");
  private final List<String> citiesTitlesEN = Arrays.asList("San Jose", "Bakersfield", "Sacramento", "Long Beach", "Los Angeles", "Oxnard", "Fairfield", "Fountain Valley");
  private final List<String> streetTitlesEN = Arrays.asList("Hanover Street", "Beech Street", "Tanglewood Avenue", "East Roberts Street", "Plumb Branch Avenue", "Grove Avenue", "Pennsylvania Street", "Warren Street", "Peg Shop Avenue", "Fordham Street", "Elm Drive", "Birchpond Street", "Brookside Street", "Bradford Road", "Manchester Avenue", "Hanover Street", "Nut Swamp Street", "Pacific Avenue", "Princess Road");
  private final List<String> zipCodesEN = Arrays.asList("209", "213", "310", "323", "408", "415", "424", "442", "510", "530", "559", "562", "619", "626", "650", "657", "661", "669", "707", "714", "747", "760", "805", "818", "831", "858", "909", "916", "925", "949", "951");
  private final List<String> birthMonths = Arrays.asList("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December");
  private final List<String> quotesEN = Arrays.asList("Ah, Jesus Christ! Jesus Christ, Doc, you disintegrated Einstein!", "All right. This is an oldie, but, uh... well, it's an oldie where I come from.", "Am I to understand you're still hanging around with Dr. Emmett Brown, McFly?", "And one for you, McFly; I believe that makes four in a row. Now let me give you a nickel's worth of free advice, young man. This so-called Dr. Brown is dangerous. He's a real nutcase. You hang around with him, you're gonna end up in big trouble.", "Anyway, your Grandpa hit him with the car and brought him into the house. He seemed so helpless, like a little lost puppy, and my heart just went out to him.", "Are you telling me that this sucker is nuclear?", "Biff. What a character. Always trying to get away with something. I've had to stay on top of Biff ever since high school. Although, if it wasn't for him...", "Calm down, Marty. I didn't disintegrate anything. The molecular structure of both Einstein and the car are completely intact.", "Calvin? Wh... Why do you keep calling me Calvin?", "Course! From a group of Lybian Nationalists They wanted me to build them a bomb, so I took their plutonium and in turn I gave them a shiny bomb caseing full of used pinball machine parts!", "Crazy drunk driver.", "Damn! I'm late for school!", "Dear Dr. Brown. On the night that I go back in time, you will be shot by terrorists. Please take whatever precautions are necessary to prevent this terrible disaster. Your friend, Marty.", "Don't be so gullible, McFly. Got the place fixed up nice, though, McFly.", "Don't worry. As long as you hit that wire with the connecting hook at precisely 88 miles per hour, the instant the lightning strikes the tower... everything will be fine.", "Give me a Pepsi Free.", "Great Scott!", "He laid out Biff in one punch. I didn't know he had it in him. He's never stood up to Biff in his life!", "He's a Peeping Tom!", "He's an absolute dream!", "He's an idiot. Comes from upbringing. His parents are probably idiots, too. Lorraine, you ever have a kid who acts that way, I'll disown you.", "Hello? Hello? Anybody home? Huh? Think, McFly. Think! I gotta have time to get them retyped. Do you realize what would happen if I hand in my reports in your handwriting? I'll get fired. You wouldn't want that to happen, would ya? Would ya?", "Hey, Biff, get a load of this guy's life preserver. Dork thinks he's gonna drown.", "Hey, come on. I had to change. Do you think I'm going back in that-that zoot suit? The old man really came through. It worked!", "Hey, Dad! George! Hey, you on the bike!", "Hey, hey, listen, guys... Look, I don't wanna mess with no reefer addicts, okay?", "Hey, McFly! I thought I told you never to come in here.", "Hey, you! Get your damn hands off her!", "I can't believe you'd loan me your car without telling me it had a blind spot. I could've been killed!", "I finally invent something that works!", "I g-guess you guys aren't ready for that yet. But your kids are gonna love it.", "I had a horrible nightmare. I dreamed that I went... back in time. It was terrible.", "I have your car towed all the way to your house and all you got for me is lite beer?", "I noticed your band is on the roster for the dance auditions after school today. Why even bother, McFly? You don't have a chance. You're too much like your old man. No McFly ever amounted to anything in the history of Hill Valley!", "I'm from the future. I came here in a Time Machine that you invented. Now I need your help to get back to the year 1985.", "I'm gonna get that son of a bitch.", "I'm sure that in 1985, plutonium is available in every corner drugstore, but in 1955, it's a little hard to come by.", "I've had enough practical jokes for one evening. Good night, future boy!", "I've never seen purple underwear before!", "If my calculations are correct, when this baby hits 88 miles per hour... you're gonna see some serious shit.", "If you put your mind to it, you can accomplish anything.", "It's already mutated into human form! Shoot it!", "It's gonna be really hard waiting 30 years before I can talk to you about everything that's happened in the past few days. I'm really gonna miss you, Marty.", "Jesus, George, it was a wonder I was even born.", "Last night, Darth Vader came down from Planet Vulcan and told me that if I didn't take Lorraine out, that he'd melt my brain.", "Let me show you my plan for sending you home. Please excuse the crudity of this model. I didn't have time to build it to scale or paint it.", "Let's see if you bastards can do 90.", "Look! There's a rhythmic ceremonial ritual coming up.", "Look, I'm just not ready to ask Lorraine out to the dance, and not you, or anybody else on this planet is gonna make me change my mind.", "Look, Marvin, you gotta play. See, that's where they kiss for the first time on the dance floor. And if there's no music, they can't dance. If they can't dance, they can't kiss. If they can't kiss they can't fall in love, and I'm history.", "Look, you're not gonna be picking a fight, Dad... Dad-Dad-Daddy-O.", "Lorraine. My density has brought me to you.", "Marty, don't be such a square. Everybody who's anybody drinks.", "Marty, I'm sorry, but the only power source capable of generating 1.21 gigawatts of electricity is a bolt of lightning.", "Marty, will we ever see you again?", "Maybe you were adopted.", "My equipment. That reminds me, Marty. You better not hook up to the amplifier. There's a slight possibility of overload.", "Next saturday night we're sending you back to the future!", "No wonder your president has to be an actor. He's gotta look good on television.", "No! It requires something with a little more kick...plutonium!", "No! Marty! We've already agreed that having information about the future can be extremely dangerous. Even if your intentions are good, it can backfire drastically!", "No, get out of town. My mom thinks I'm going camping with the guys. Look, Jennifer, my mother would freak out if she knew I was going out with you, and I'd get the standard lecture about how she never did that kind of stuff when she was a kid. I mean, look, I think the woman was born a nun.", "No, no, no, no, no, this sucker's electrical, but I need a nuclear reaction to generate the 1.21 gigawatts of electricity I need.", "Now, Biff, I want to make sure that we get two coats of wax this time, not just one.", "Now, remember. According to my theory, you interfered with your parents' first meeting. If they don't meet, they won't fall in love, they won't get married and they won't have kids. That's why your older brother's disappearing from that photograph. Your sister will follow, and unless you repair the damage, you'll be next.", "Oh, honey, he's teasing you. Nobody has two television sets.", "Oh, my God. They found me. I don't know how, but they found me. Run for it, Marty!", "Oh, that's Joey. He cries when we take him out so we just leave him in there.", "Oh. One other thing. If you guys ever have kids, and one of them, when he's eight years old, accidentally sets fire to the living room rug... go easy on him.", "Okay, thank you. That's enough. Hold it now. Hold it. Hold it, fellas. I'm afraid you're just too darn loud. Next, please. Bring in the next group, please.", "Okay. Time circuit's on. Flux capacitor, fluxing. Engine running. All right.", "Perfect! My experiment worked! They're all exactly 25 minutes slow!", "Radiation suit? Of course. 'Cause of all the fallout from the atomic wars.", "Roads? Where we're going, we don't need roads.", "Save the clock tower!", "Scram, McFly. I'm cuttin' in.", "See you in about 30 years.", "See you later, Pop. Whoo! Time to change that oil.", "Silence, Earthling. My name is Darth Vader. I am an extraterrestrial from the planet Vulcan!", "Since when can weathermen predict the weather, let alone the future?", "Since you're new here, I-I'm gonna cut you a break, today. So, why don't you make like a tree and get outta here?", "So you're my Uncle Joey. Better get used to these bars, kid.", "Stand tall, boy. Have some respect for yourself. Don't you know, if you let people walk over you now, they'll be walking over you for the rest of your life. Look at me. You think I'm gonna spend the rest of my life in this slop house?", "Stella! Another one of these damn kids jumped in front of my car! Come on out here! Help me take him in the house!", "Take that, you mutated son of a bitch!", "That's Strickland. Jesus, didn't that guy ever have hair?", "The appropriate question is, 'when the hell are they?' You see, Einstein has just become the world's first time traveler! I sent him into the future. One minute into the future to be exact. And at precisely 1:21 a.m. and zero seconds, we shall catch up with him and the time machine.", "The way I see it, if you're gonna build a time machine into a car, why not do it with some style?", "There's that word again. 'Heavy.' Why are things so heavy in the future? Is there a problem with the Earth's gravitational pull?", "Things have certainly changed around here. I remember when this was all farmland as far the eye could see. Old man Peabody owned all of this. He had this crazy idea about breeding pine trees.", "This is all wrong. I don't know what it is. But when I kiss you, it's like I'm kissing... my brother. I guess that doesn't make any sense, does it?", "Wait a minute. Wait a minute, Doc. Ah... Are you telling me that you built a time machine... out of a DeLorean?", "We're the, uh... We're the Pinheads.", "Weight has nothing to do with it.", "Well, I figured, what the hell?", "Well, you're safe and sound now, back in good old 1955.", "What about all that talk about screwing up future events? The space-time continuum?", "What are you looking at, butthead?", "What happens to us in the future? Do we become assholes or something?", "What if I send in the tape and they don't like it? I mean, what if they say I'm no good? What if they say 'Get outta here, kid. You got no future'? I mean, I just don't think I can take that kind of rejection. Jesus, I'm starting to sound like my old man!", "What-what the hell is a gigawatt?", "Who the hell is John F. Kennedy?", "Who's President of the United States in 1985? Ronald Reagan? The actor? Ha! Then whose vice president? Jerry Lewis?", "Whoa. This is heavy.", "Whoa. Wait a minute, Doc. Are you trying to tell me that my mother has got the hots for me?", "Yeah, well, history is gonna change.", "Yes. Yes. I'm George. George McFly. I'm your density. I mean, your destiny.", "You caused 300 bucks damage to my car, you son of a bitch. And I'm gonna take it out of your ass.", "You got a real attitude problem, McFly; you're a slacker. You remind me of your father when he went here; he was a slacker, too.", "You know, Marty, you look so familiar to me. Do I know your mother?", "You really think I ought to swear?", "You want a Pepsi, pal, you're gonna pay for it.", "You're late! Do you have no concept of time?");
  private final List<String> quotesRU = Arrays.asList("Я собираюсь сделать ему предложение, от которого он не сможет отказаться", "Тото, у меня такое ощущение, что мы больше не в Канзасе", "Да пребудет с тобой Сила!", "Покажи мне деньги!", "Моя мама всегда говорила: «Жизнь как коробка шоколадных конфет: никогда не знаешь, какая начинка тебе попадётся", "Хьюстон, у нас проблема", "Моя прелесть!", "Обожаю запах напалма по утрам", "Кто возьмет билетов пачку, тот получит водокачку!", "Я подумаю об этом завтра", "Выбирай жизнь. Выбирай будущее. Выбирай карьеру. Выбирай семью. Я выбрал что-то другое", "Элементарно, Ватсон", "— Людк, а Людк, глянь-к, какая сучка крашена! — Ну почему крашеная, это мой натуральный цвет!", "Ты меня заводишь, детка", "Я мзду не беру, мне за державу обидно!", "Селянка, а селянка! Хочешь большой, но чистой любви?", "Я тебе один умный вещь скажу, только ты не обижайся", "Я был нетрезв, мое поведение недостойно советского офицера!", "Вот тебе пальто, Базин, и мечтай о чем-нибудь высоком!", "Я требую продолжения банкета!", "Украл, выпил — в тюрьму. Украл, выпил — в тюрьму. Романтика", "Мальчиков у нас действительно дефицит, но не до такой же степени", "Ложки нет", "Сегодня я буду кутить. Весело, добродушно, — со всякими безобидными выходками. Приготовьте посуду, тарелки — я буду все это бить. Уберите хлеб из овина — я подожгу овин", "Если у общества нет цветовой дифференциации штанов, значит, у него нет цели", "Наверное, вы еще не готовы к такой музыке, но вашим детям она понравится", "Я вот все думала: как это носы целоваться не мешают? А теперь вижу — не мешают", "Утром деньги — вечером стулья. А можно наоборот? Можно, но деньги вперед!", "Ларису Ивановну хочу!", "Вам велели передать, Проня Прокоповна, что вы ПОДЛЮКА!", "Гони рубль, родственник! Мне Афоня рубль должен был!", "Я твой отец, Люк!", "Ну и рожа у тебя, Шарапов!", "Я тебя поцелую, потом, если захочешь", "В чем сила, брат?", "Ку!", "Умное лицо — это ещё не признак ума", "Не учите меня жить, лучше помогите материально!", "Какая гадость эта ваша заливная рыба!", "Поскользнулся, упал, закрытый перелом, потерял сознание, очнулся — гипс!", "У них же, мать их, пушки, а в них же, мать их, пули", "Заметьте, не я это предложил!", "Лед тронулся, господа присяжные заседатели!", "Ну, граждане алкоголики, хулиганы, тунеядцы, кто хочет сегодня поработать?", "Сдаётся мне, джентльмены, это была комедия", "Господин назначил меня любимой женой!", "Дай папиросочку, у тебя брюки в полосочку!", "А вдоль дороги — мертвые с косами стоять. И тишина…", "Тебя посодют, а ты не воруй", "Всё нормально, падаю!", "Сестра, а не найдется соли и лимончика, а то текилку нечем закусить", "Вот иду я красивая по улице, а мужики вокруг так и падают, так и падают… И сами в штабеля укладываются!", "Капусточка, мама, конечно, дело хорошее, но в доме надо держать и мясные закуски", "У верблюда два горба, потому что жизнь — борьба!", "Вот так всегда: ходишь, ходишь в школу, а потом — бац! — и вторая смена", "Вы ещё подеритесь, горячие финские парни…", "Главное, чтобы костюмчик сидел!", "Спасибо, я пешком постою", "Ури, Ури! Где у него кнопка?", "Всё будет хорошо, я узнавала", "За алкоголь! Причину и решение всех проблем", "О боже мой, они убили Кенни!", "Я просто выгляжу как лось, а в душе я бабочка", "Але. Кто это? Директор? Да пошел ты в жопу, директор, не до тебя щас", "А ля-ля-ля-ля-ля, а я сошла с ума… Эх, какая досада", "Улыбаемся и машем!", "Я не жадный, я домовитый!", "Поздравляю тебя, Шарик, ты балбес!", "Где карта, Билли? Нам нужна карта!", "Средства у нас есть. У нас ума не хватает", "Бонд. Джеймс Бонд", "Ваня, я ваша навеки!", "Сова! Открывай! Медведь пришёл!", "Маловата, понимаешь… Маловата будет!", "Не будем говорить кто, хотя это был слоненок", "Измерить температуру забортной воды не представляется возможным из—за отсутствия таковой!", "На небе только и разговоров, что о море", "До пятницы я совершенно свободен", "Мы строили, строили и, наконец, построили!", "Ничего не понимаю! Или что-то случилось, или одно из двух!", "Эй, птичка, летим со мной, там столько вкусного!", "Кто ж его посадит? Он-же памятник!", "Щас спою!", "Это не техника дошла, а я сама сюда дошла. На лыжах", "Мы с тобой одной крови — ты и я!", "О, тепленькая пошла!", "У Вас такие перья, у Вас глаза такие, копыта очень стройные и добрая душа!", "Девочка, чего ты хочешь — чтобы тебе оторвали голову или поехать на дачу?", "Трям! — значит здравствуйте!", "Ребята, давайте жить дружно!", "Наши люди в булочную на такси не ездят", "Ну вот, а то всё мама, мама!", "Муля, не нервируй меня!", "Мне бы помыться, а то от меня котиками пахнет", "Ноги, крылья… Главное — хвост!");
  //</editor-fold>

  public ContactData getRandomContact() throws IOException {
    String gender = getRandomItem(genders);
    String firstName = "";
    String middleName = "";
    String lastName = "";
    String nickname = "";
    File photo = new File("src/test/resources/photos" +
            getRandomItem(getGenderDependentList(gender, malePhotos, femalePhotos)));
    String jobTitle = "";
    String company = "";
    String mainAddress = "";
    String homePhone = "";
    String mobilePhone = "";
    String workPhone = "";
    String faxNumber = "";
    String email1 = "";
    String email2 = "";
    String email3 = "";
    String homePage = "";
    int birthDay = getRandomRangeList(2, 33);
    String birthMonth = getRandomItem(birthMonths);
    int birthYear = getRandomRangeList(1982, 2001);
    int anniversaryDay = birthDay - 1;
    int anniversaryYear = birthYear + 15;
    String addAddress = "";
    String addPhone = "";
    String notes = "";
    switch (ContactDataGenerator.lang) {
      case "en":
        firstName = getRandomItem(getFirstNamesEN());
        middleName = getRandomItem(maleFirstNamesEN);
        lastName = getRandomItem(lastNamesEN);
        nickname = firstName + "_" + lastName;
        jobTitle = getRandomItem(jobSeniorityEN) + " " + getRandomItem(jobPositionEN);
        company = getRandomItem(companyNamesEN) + " " + getRandomItem(companySuffixesEN);
        mainAddress = getRandomRangeList(1, 1000) + " " + getRandomItem(streetTitlesEN) + ", " +
                getRandomItem(citiesTitlesEN) + " CA " + getFormat("%04d", 9999);
        homePhone = "+1(" + getRandomItem(zipCodesEN) + ") " + getFormat("%03d", 999) + " " +
                getFormat("%02d", 99) + " " + getFormat("%02d", 99);
        mobilePhone = "1" + getRandomItem(zipCodesEN) + "-" + getFormat("%03d", 999) + "-" +
                getFormat("%02d", 99) + "-" + getFormat("%02d", 99);
        workPhone = "1." + getRandomItem(zipCodesEN) + "." + getFormat("%03d", 999) + "." +
                getFormat("%02d", 99) + "." + getFormat("%02d", 99) + " #" + getFormat("%04d", 9999);
        faxNumber = "+1" + getRandomItem(zipCodesEN) + getFormat("%03d", 999) + getFormat("%02d", 99) +
                getFormat("%02d", 99);
        email1 = firstName.toLowerCase() + lastName.toLowerCase() + "@gmail.com";
        email2 = firstName.toLowerCase() + "." + lastName.toLowerCase() + "@yahoo.com";
        email3 = firstName.toLowerCase() + "_" + lastName.toLowerCase() + "@hotmail.com";
        homePage = "https://www.facebook.com/" + firstName.toLowerCase() + "." + lastName.toLowerCase();
        addAddress = getRandomRangeList(1, 1000) + " " + getRandomItem(streetTitlesEN) + ", " +
                getRandomItem(citiesTitlesEN) + " CA " + getFormat("%04d", 9999);
        addPhone = "+1 (" + getRandomItem(zipCodesEN) + ") " + getFormat("%03d", 999) + "-" +
                getFormat("%02d", 99) + "-" + getFormat("%02d", 99);
        notes = getRandomItem(quotesEN).replace("'", " ");
        break;
      case "ru":
        firstName = getRandomItem(getGenderDependentList(gender, maleFirstNamesRU, femaleFirstNamesRU));
        middleName = getRandomItem(getGenderDependentList(gender, maleMiddleNamesRU, femaleMiddleNamesRU));
        lastName = getRandomItem(getGenderDependentList(gender, maleLastNamesRU, femaleLastNamesRU));
        nickname = toLatinTrans.transliterate(firstName).replace("'", "") + "_" +
                toLatinTrans.transliterate(lastName).replace("'", "");
        jobTitle = getRandomItem(jobTitlesRU);
        company = getRandomItem(companyPrefixesRU) + " " + getRandomItem(companySuffixesRU) +
                getRandomItem(companySuffixesRU) + getRandomItem(companySuffixesRU);
        mainAddress = getFormat("%06d", 999999) + ", г. Москва, ул. " + getRandomItem(streetTitlesRU) + ", д. " +
                getRandomRangeList(1, 100) + ", корп. " + getRandomRangeList(1, 10) + ", кв. " +
                getRandomRangeList(1, 1000);
        homePhone = "+7(9" + getFormat("%02d", 99) + ") " + getFormat("%03d", 999) + " " +
                getFormat("%02d", 99) + " " + getFormat("%02d", 99);
        mobilePhone = "8-9" + getFormat("%02d", 99) + "-" + getFormat("%03d", 999) + "-" +
                getFormat("%02d", 99) + "-" + getFormat("%02d", 99);
        workPhone = "7.9" + getFormat("%02d", 99) + "." + getFormat("%03d", 999) + "." +
                getFormat("%02d", 99) + "." + getFormat("%02d", 99) + " #" + getFormat("%04d", 9999);
        faxNumber = "79" + getFormat("%02d", 99) + getFormat("%03d", 999) +
                getFormat("%02d", 99) + getFormat("%02d", 99);
        email1 = transToLatin(firstName) + transToLatin(lastName) + "@gmail.com";
        email2 = transToLatin(firstName) + "." + transToLatin(lastName) + "@yandex.ru";
        email3 = transToLatin(firstName) + "_" + transToLatin(lastName) + "@mail.ru";
        homePage = "https://www.facebook.com/" + transToLatin(firstName) + "." + transToLatin(lastName);
        addAddress = getFormat("%06d", 999999) + ", г. Москва, ул. " + getRandomItem(streetTitlesRU) + ", д. " +
                getRandomRangeList(1, 100) + ", корп. " + getRandomRangeList(1, 10) + ", кв. " +
                getRandomRangeList(1, 1000);
        addPhone = "8 (9" + getFormat("%02d", 99) + ") " + getFormat("%03d", 999) + "-" +
                getFormat("%02d", 99) + "-" + getFormat("%02d", 99);
        notes = getRandomItem(quotesRU);
        break;
      default:
        ContactDataGenerator.lang = "ru";
        System.out.println("Unrecognized language: " + ContactDataGenerator.lang);
        break;
    }
    return new ContactData()
            .withFirstName(firstName).withMiddleName(middleName).withLastName(lastName).withNickname(nickname)
            .withPhoto(photo).withJobTitle(jobTitle).withCompanyName(company).withMainAddress(mainAddress)
            .withHomePhone(homePhone).withMobilePhone(mobilePhone).withWorkPhone(workPhone).withFaxNumber(faxNumber)
            .withEmail(email1).withEmail2(email2).withEmail3(email3).withWebSite(homePage).withBirthDay(birthDay)
            .withBirthMonth(birthMonth).withBirthYear(String.valueOf(birthYear))
            .withAnniversaryDay(String.valueOf(anniversaryDay)).withAnniversaryMonth(birthMonth)
            .withAnniversaryYear(String.valueOf(anniversaryYear)).withAdAddress(addAddress)
            .withAdPhone(addPhone).withNotes(notes);
  }

  public int getRandomRangeList(int i, int i2) {
    return ThreadLocalRandom.current().nextInt(i, i2);
  }

  private String transToLatin(String firstName) {
    return toLatinTrans.transliterate(firstName.toLowerCase()).replace("ʹ", "");
  }

  private String getFormat(String s, int i) {
    return String.format(s, random.nextInt(i));
  }

  private List<String> getFirstNamesEN() {
    List<List<String>> merged = new ArrayList<>();
    for (int i = 0; i < maleFirstNamesEN.size(); i++) {
      List<String> temp = new ArrayList<>();
      temp.add(maleFirstNamesEN.get(i));
      temp.add(femaleFirstNamesEN.get(i));
      merged.add(temp);
    }
    return merged.stream().flatMap(Collection::stream).collect(Collectors.toList());
  }

  private List<String> getGenderDependentList(String gender, List<String> forMale, List<String> forFemale) {
    List<String> list = new ArrayList<>();
    if (gender.equals("male")) {
      list.addAll(forMale);
    } else if (gender.equals("female")) {
      list.addAll(forFemale);
    } else {
      System.out.println("Unrecognized gender: " + gender);
    }
    return list;
  }

  private <T> T getRandomItem(List<T> list) {
    return list.get(random.nextInt(list.size()));
  }
}
