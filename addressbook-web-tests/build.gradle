apply plugin: 'java'

/**
 * Repositories
 */
repositories.mavenCentral()

/**
 * Dependencies
 */
dependencies.implementation group: 'org.testng', name: 'testng', version: '7.1.0'
dependencies.implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
dependencies.implementation group: 'org.hamcrest', name: 'java-hamcrest', version: '2.0.0.0'
dependencies.implementation group: 'com.beust', name: 'jcommander', version: '1.78'
dependencies.implementation group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.13'
dependencies.implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
dependencies.implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.11.2'
dependencies.implementation group: 'com.github.javafaker', name: 'javafaker', version: '1.0.2'
dependencies.implementation group: 'com.ibm.icu', name: 'icu4j', version: '67.1'
dependencies.implementation group: 'commons-lang', name: 'commons-lang', version: '2.6'
dependencies.implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
dependencies.implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.21'
dependencies.implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.4.22.Final'

/**
 * Test Framework
 */
test.useTestNG()

/**
 * Test Suites
 */
task testGroups(type: Test) {
    useTestNG {
        suites 'src/test/resources/testngsuites/testng-groups.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }
}

task testContacts(type: Test) {
    useTestNG {
        suites 'src/test/resources/testngsuites/testng-contacts.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }
}

task testDPGroups(type: Test) {
    useTestNG {
        suites 'src/test/resources/testngsuites/testng-dp-groups.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }
}

task testDPContacts(type: Test) {
    useTestNG {
        suites 'src/test/resources/testngsuites/testng-dp-contacts.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }
}

task testDBGroups(type: Test) {
    useTestNG {
        suites 'src/test/resources/testngsuites/testng-db-groups.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }
    if (project.hasProperty('verifyUI')) {
        systemProperty 'verifyUI', "${verifyUI}"
    }
}

task testDBContacts(type: Test) {
    useTestNG {
        suites 'src/test/resources/testngsuites/testng-db-contacts.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }
    if (project.hasProperty('verifyUI')) {
        systemProperty 'verifyUI', "${verifyUI}"
    }
}

/**
 * 1st approach: Setting encoding during compilation in Java and Test classes
 */
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

/**
 * 2nd approach: Setting encoding during compilation in Java and Test classes
 *
 tasks.withType(JavaCompile) {options.encoding = "UTF-8"}tasks.withType(Test) {systemProperty "file.encoding", "UTF-8"}*/